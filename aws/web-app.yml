AWSTemplateFormatVersion: 2010-09-09

Parameters:

  Env:
    Type: String

Resources:

  Storage:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub laravel-bref-storage-${AWS::AccountId}-${Env}

  Assets:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub laravel-bref-assets-${AWS::AccountId}-${Env}
  AssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Assets
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${Assets}/*
            Principal:
              CanonicalUser: !GetAtt AssetsBucketCFOAI.S3CanonicalUserId
  AssetsBucketCFOAI:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref Assets

  RestApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      ProtocolType: HTTP
      Target: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LaravelBref}/invocations
      Name: !Sub laravel-bref-${Env}
  RestApiLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub ${LaravelBref}
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*
  LaravelBref:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: !Sub laravel-bref-${Env}
      Layers:
        - arn:aws:lambda:us-east-1:209497400698:layer:php-74-fpm:17
      Handler: "index.php"
      Runtime: "provided.al2"
      MemorySize: 256
      Timeout: 28
      Environment:
        Variables:
          ENV: !Ref Env
      Role: !GetAtt LambdaRole.Arn
      Code: src/bref.zip
  LaravelBrefLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LaravelBref}"
      RetentionInDays: 30
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  LambdaRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaRolePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "s3:*"
            Resource: "*"
      Roles:
        - !Ref LambdaRole

